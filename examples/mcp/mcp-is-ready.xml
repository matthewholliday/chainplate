<pipeline name="mcp list tools">
    <context>
        <debug>STEP 1: setting hardcoded tool selection...</debug>
        <set-variable output_var="tool_selection">
            call: API-post-page

            {
                "parent": { "page_id": "basd1023" },
                "properties": {
                "title": [
                    { "text": { "content": "Grocery — Dinner Tonight" } }
                ]
                }
            }        
        </set-variable>
        
        <debug>STEP 2: analyzing tool selection...</debug>
        <send-prompt output_var="is_ready_for_mcp_str">
            You are a boolean gate. Decide whether the previous assistant message contains enough concrete information to execute a single, specific MCP tool call right now. Here is the input you should read:

            ==START INPUT==
            {{ tool_selection }}
            ==END INPUT==

            Decision rules (apply in order):

            If the message asks for confirmation, feedback, preferences, missing inputs, or next steps from the user (e.g., “Would you like me to…?”, “Please provide…”, “Let me know…”, “Which option…?”) → false.

            If the message does not name a specific tool to call → false.

            If the message names multiple tools or presents conditionals/branches about which tool to use (“If X use A, else use B”) → false.

            If any required arguments are unspecified, ambiguous, or placeholders (e.g., “TBD”, “???”, “choose one”) → false.

            If the message depends on unstated context you dont have (tokens, credentials, files, prior answers) or requires user consent/authorization not yet given → false.

            If the message specifies exactly one tool by name and provides all necessary arguments with concrete, unambiguous values, with no pending questions or conditions → true.

            Write an explanation of your decision in the output variable "is_ready_for_mcp_str".
        </send-prompt>

        <debug>STEP 3: interpreting readiness for MCP execution...</debug>
        <interpret-as-bool input_var="is_ready_for_mcp_str" output_var="is_ready_for_mcp_bool"></interpret-as-bool>

        <debug>STEP 4: final assessment output...</debug>
        <set-variable output_var="__payload__"> assessment: {{ is_ready_for_mcp_str }} </set-variable>
    </context>
</pipeline>