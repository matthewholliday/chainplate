<pipeline name="mcp list tools">
    <mcp-list-tools output_var="tools_list" mcp_service="notion"/>
    <write-to-file filename="notion_tool_list.txt">{{ tools_list }}</write-to-file>
    <context>
        {{ tools_list }}
        <send-prompt output_var="tool_selection">
            Create a plan for using the notion tools to create a task to go to the grocery store and pick up some items for dinner tonight.
        </send-prompt>
        <write-to-file filename="tool_selection.txt">{{ tool_selection }}</write-to-file>
        <set-variable output_var="is_ready_for_mcp_str">
            You are a boolean gate. Decide whether the previous assistant message contains enough concrete information to execute a single, specific MCP tool call right now. Read only this merge field as input:

            {{ tool_selection }}

            Decision rules (apply in order):

            If the message asks for confirmation, feedback, preferences, missing inputs, or next steps from the user (e.g., “Would you like me to…?”, “Please provide…”, “Let me know…”, “Which option…?”) → false.

            If the message does not name a specific tool to call → false.

            If the message names multiple tools or presents conditionals/branches about which tool to use (“If X use A, else use B”) → false.

            If any required arguments are unspecified, ambiguous, or placeholders (e.g., “TBD”, “???”, “choose one”) → false.

            If the message depends on unstated context you dont have (tokens, credentials, files, prior answers) or requires user consent/authorization not yet given → false.

            If the message specifies exactly one tool by name and provides all necessary arguments with concrete, unambiguous values, with no pending questions or conditions → true.

            Output format:

            Return exactly one lowercase word with no extra text: either
            true
            or
            false
        </set-variable>
        <interpret-as-bool input_var="is_ready_for_mcp_str" output_var="is_ready_for_mcp_bool"></interpret-as-bool>
        <set-variable output_var="__payload__"> assessment: {{ is_ready_for_mcp_bool }} </set-variable>
    </context>
</pipeline>